AWS : cloud provider
provide servers and service that we can scale easily and use on demand
Learn aws services



AWS instance types :

general purpose
storage purpose
memory purpose
computing purpose



Cost type :

On-demand
reserved 
saving
spot-instance
dedicated host and server


ec2 placement groups : 
cluster --> single az
spread ---> spread across region
partition


Ec2 hibernate --> memory is preserved , faster boot

EBS ---> restricted to az
EBS snapshots (back ups ) EBS snapshot archive cheap 



EBS types : 

gp2/gp3 (SDD)
io1/io2 (SDD)
stl(HDD)
scl(HDD)


EBS multi attach --> more ec2 one storage(i01/io2)max 16 instances uses KMS (encryption)


EFS : network file system can be mounted on many EC2



Load Balancers : 

CLB (layer4&7)

ALB (layer7) enabled cross zone load balacing

NLB (layer4)

GLB (gateway load balancer)



Sticky sessions && cross zone load balancing 


SSL / TLS (Secure socket layer / transport layer sec)



ASG : 


A Launch Template (older “Launch Configurations” are deprecated)
• AMI + Instance Type
• EC2 User Data
• EBS Volumes
• Security Groups
• SSH Key Pair
• IAM Roles for your EC2 Instances
• Network + Subnets Information
• Load Balancer Information
• Min Size / Max Size / Initial Capacity
• Scaling Policies



scaling types : 

target tracking ---> maintain this much 
simple scaling --> if cpu > 70% increase / less 30% decrease





RDS vs deploying on ec2 

rds --> point in time snapshots (backuP)
automatic scaling
read replicas
multi az setup ---> standby db 


aurora : 

Features of Aurora
• Automatic fail-over
• Backup and Recovery
• Isolation and security
• Industry compliance
• Push-button scaling
• Automated Patching with Zero Downtime
• Advanced Monitoring
• Routine Maintenance
• Backtrack: restore data at any point of time without using backups

elastic cache --> between application and db 


DNS : route53
A - IP4 (ALias) ---> Automatically recognizes changes in the
resource’s IP addresses


• Elastic Load Balancers
• CloudFront Distributions
• API Gateway
• Elastic Beanstalk environments
• S3 Websites
• VPC Interface Endpoints
• Global Accelerator accelerator
• Route 53 record in the same hosted zone

AAAA - IP6
CNAME - one hostname to otherhostname (A or AAAA)

routing policies 

simple (round robin random) 
weighted  (we can share traffic management pecentage)
failover (active and passive (Failover))
latency
geolocation (distances , countries)
geoproximity (based on users and distance)





_______________________

Elastic Bean stalk -- uses EC2 , ELb, RDS ,ASG


------------------------

attach global accelerator (edge location aws private network) and cloud front for caching
 s3 objects 



__________________________


Aws analytics : glue , athena , redhsift 

AWS databases : 

RDS -- sql
Aurora --- high available , easily scalable , high performance 

Aurora serverless --- unpredictable workload

Document DB -- MongoDB

DynamoDB -- DAX , no sql ,serverless , optional auto scaling 

Neptune -- graph db 

Amazon timestream --> time serires db 



Monitoring : 

Cloud watch , cloud trial , cloud config 

Cloud watch logs agent for ec2 

cloud watch alarms 

Cloud trail : logs for every service , every action will be registered



Security applications : 
AWS WAF : web application firewall

AWS shield : DDos protection

AWS inspector : containers , ec2 

AWS macie : 



VPC : 

endpoints : every service is exposed (it allows you to connect to service in aws private 
newtork)